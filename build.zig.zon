.{
    // This is the default name used by packages depending on this one. For
    // example, when a user runs `zig fetch --save <url>`, this field is used
    // as the key in the `dependencies` table. Although the user can choose a
    // different name, most users will stick with this provided value.
    //
    // It is redundant to include "zig" in this name because it is already
    // within the Zig package namespace.
    .name = .workflow_runner,

    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // Together with name, this represents a globally unique package
    // identifier. This field is generated by the Zig toolchain when the
    // package is first created, and then *never changes*. This allows
    // unambiguous detection of one package being an updated version of
    // another.
    //
    // When forking a Zig project, this id should be regenerated (delete the
    // field and run `zig build`) if the upstream project is still maintained.
    // Otherwise, the fork is *hostile*, attempting to take control over the
    // original project's identity. Thus it is recommended to leave the comment
    // on the following line intact, so that it shows up in code reviews that
    // modify the field.
    .fingerprint = 0xd82e31fd26499c21, // Changing this has security and trust implications.

    // Tracks the earliest Zig version that the package considers to be a
    // supported use case.
    .minimum_zig_version = "0.14.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        .yaml = .{
            .url = "https://github.com/PipeletCloud/zig-yaml/archive/9a6926443ad3879ac0c147c2c68b0d1dadb2135b.tar.gz",
            .hash = "zig_yaml-0.1.0-C1161piWAgDpeXlIH32h9rEXCzWyjGx0ypxR0XwdAf6Q",
        },
        .libxev = .{
            .url = "https://github.com/mitchellh/libxev/archive/5647630d7bff969414a0edc24c03c30aff34b101.tar.gz",
            .hash = "libxev-0.0.0-86vtc4b1EgCl0Kvo2Ixmjfl5PgAaJmvCXRIn_n89nCaR",
        },
        .smtp_client = .{
            .url = "https://github.com/karlseguin/smtp_client.zig/archive/79cd8d0500f1df16aaa1f018011615a132c309e6.tar.gz",
            .hash = "smtp_client-0.0.1-Vh9B1KhkAQD_dWR7LO1qdIby48SVfV_hLb067M-vj54l",
        },
        .ztl = .{
            .url = "https://github.com/PipeletCloud/ztl/archive/1eee71a9691c17888c334c1ee087ac014c05aacb.tar.gz",
            .hash = "ztl-0.0.0-XMYgXOvIBABYVKB2H1T5yuUS61pN6MtRJwqR_7jGh81G",
        },
        .ollama = .{
            .url = "https://github.com/PipeletCloud/ollama-zig/archive/0746d803d9c522271d5f6814f26d88fb8facfe12.tar.gz",
            .hash = "ollama-0.0.1-WEit4JZfAABoAr9Fpfe7qUBS2U6xoic7cPj1JXBrgrPb",
        },
    },
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "src",
        "LICENSE",
        "README.md",
    },
}
